@using SIMSWeb.Business.ServiceDTO.CourseDTO

@model UpdateCourseVM;

@{
    var title = Model.Course.ModifyTeacher
    ? "Assign Teacher"
    : Model.Course.EnrollStudents
    ? "Enroll Students"
    : "Edit Course";
    ViewData["Title"] = title;
}

<form method="post" asp-action="EditCourse" asp-controller="Course">
    <input asp-for="@Model.Course.Id" name="Id" hidden />
    <input asp-for="@Model.Course.ModifyTeacher" name="ModifyTeacher" hidden />
    <input asp-for="@Model.Course.EnrollStudents" name="EnrollStudents" hidden />

    <div class="p-3 pt-4 gap-2">
        <div class="row">
            <h2>@title</h2>
            <hr />
        </div>
        <div asp-validation-summary="ModelOnly"></div>
        <div class="mb-3">
            <label>Course Name</label>
            <input asp-for="@Model.Course.Name" name="Name" type="text" class="form-control"
                   disabled="@(Model.Course.ModifyTeacher || Model.Course.EnrollStudents)" />
            @if (Model.Course.ModifyTeacher || Model.Course.EnrollStudents)
            {
                <input type="hidden" asp-for="@Model.Course.Name" name="Name" />
            }
            <span asp-validation-for="@Model.Course.Name" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label>Description</label>
            <textarea asp-for="@Model.Course.Description" rows="5"
                      name="Description" type="text" class="form-control"
                      disabled="@(Model.Course.ModifyTeacher || Model.Course.EnrollStudents)"></textarea>
            @if (Model.Course.ModifyTeacher || Model.Course.EnrollStudents)
            {
                <input type="hidden" asp-for="@Model.Course.Description" name="Description" />
            }
        </div>
        @if (Model.Course.EnrollStudents)
        {
            <div class="mb-3">
                <label>Students</label>
                <select asp-for="@Model.Course.StudentId" asp-items="@(new SelectList(Model.StudentList, "Id", "Name"))"
                        name="StudentId" class="form-select">
                </select>
            </div>
        }
        else
        {
            <div class="mb-3">
                <label>Teacher</label>
                <select asp-for="@Model.Course.TeacherId" asp-items="@(new SelectList(Model.TeachersList, "Id", "Name"))"
                        name="TeacherId" class="form-select">
                </select>
            </div>
        }

        @if (Model.Course.ModifyTeacher)
        {
            <div class="mb-3">
                <label class="form-label">Department</label>
                <input asp-for="@Model.Course.Department" name="Department" class="form-control" />

            </div>
        }
        @* @if (Model.Course.EnrollStudents)
        {
            <div class="mb-3">
                <label class="form-label">Term</label>
                <input asp-for="@Model.Course.Term" name="Term" class="form-control" />
            </div>
            <div class="mb-3">
                <label class="form-label">Marks</label>
                <input asp-for="@Model.Course.Marks" name="Marks" class="form-control" />
            </div>
            <div class="mb-3">
                <label class="form-label">Comments</label>
                <textarea asp-for="@Model.Course.Comments" rows="5" name="Comments" class="form-control"></textarea>
            </div>
        } *@
        <div class="row mb-3">
            <div class="col-1">
                <label class="form-label">Active</label>
            </div>
            <div class="col-1">
                <input asp-for="@Model.Course.IsActive" name="IsActive" type="checkbox"
                       checked disabled="@(Model.Course.ModifyTeacher || Model.Course.EnrollStudents)"
                       class="form-check" />
                @if (Model.Course.ModifyTeacher || Model.Course.EnrollStudents)
                {
                    <input type="hidden" asp-for="@Model.Course.IsActive" name="IsActive" />
                }
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <button type="submit" class="btn btn-primary" asp-action="EditCourse" id="btn_update"
                        asp-controller="Course">
                    Update
                </button>
                @if (Model.Course.ModifyTeacher || Model.Course.EnrollStudents)
                {
                    <a asp-controller="Course" asp-action="ViewCourse" asp-route-id="@Model.Course.Id"
                       class="btn btn-outline-primary">
                        Cancel
                    </a>
                }
                else
                {
                    <a asp-controller="Course" asp-action="ManageCourses" class="btn btn-outline-primary">
                        Cancel
                    </a>
                }

            </div>
        </div>
    </div>
</form>


@section Scripts
{
    @{
        <partial name="_ValidationScriptsPartial" />
    }

    <script type="text/javascript">
        $(document).ready(function () {
            // Get the current URL
            const currentUrl = window.location.href;

            // Create a URLSearchParams object from the current URL
            const urlParams = new URLSearchParams(window.location.search);

            // Access query parameters by key
            const isTeacherView = urlParams.get('modifyTeacher');
            const isStudenEnrollView = urlParams.get('enrollStudents');

            const disableUpdateCTA = () => {

                if(isStudenEnrollView === "true")
                {
                    var studentId = +$('select[name="StudentId"]').val();
                    if(isNaN(studentId) || studentId == -1){
                        $('#btn_update').attr("disabled", "disabled");
                    } else{
                        $('#btn_update').removeAttr("disabled");
                    }
                }
            };

            $('select[name="TeacherId"]').on("change", () => {
            // Select the input by name and get its value
                var teacherId = +$('select[name="TeacherId"]').val();
                debugger;
                //Reset department if teacher is unassigned
                if(isTeacherView === "true" && (teacherId === null || teacherId === -1)){
                    $('input[name="Department"]').val("");
                }
            });

            $('select[name="StudentId"]').on("change", () => {
                disableUpdateCTA();
            });

            disableUpdateCTA();
        });
    </script>
}


