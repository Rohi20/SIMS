@using SIMSWeb.Model.Models;
@using SIMSWeb.Model.ViewModels;

@{
    ViewData["Title"] = "My Profile";
}

@model AdminProfile;

<div class="container">
    <div class="row g-3">
        <div class="col-md-3">
            @{
                var metricActiveUserModel = new MetricsViewModel
                {
                    Label = "Total Users",
                    Value = @Model.Status.TotalUsers,
                    BgColor = "bg-info-subtle border-info",
                    ActionName = "ManageUsers",
                    ControllerName = "Users"
                };
                <partial name="_MetricsViewPartial" model="@metricActiveUserModel" />
            }
        </div>
        <div class="col-md-3">
            @{
                var metricActiveCourseModel = new MetricsViewModel
                {
                    Label = "Active Courses",
                    Value = Model.Status.ActiveCourses,
                    BgColor = "bg-success-subtle border-success",
                    ActionName = "ManageCourses",
                    ControllerName = "Course"
                };
                <partial name="_MetricsViewPartial" model="@metricActiveCourseModel" />
            }
        </div>
        <div class="col-md-3">
            @{
                var metricAvgClassSizeModel = new MetricsViewModel
                {
                    Label = "Avg Class Size",
                    Value = Math.Round(@Model.Status.AvgClassSizePerCourse, 2),
                    BgColor = "bg-info-subtle border-info",
                };
                <partial name="_MetricsViewPartial" model="@metricAvgClassSizeModel" />
            }
        </div>
    </div>
    <!-- #Personal details -->
    <partial name="_PersonalDetailsProfilePartial" model="@Model.User" />
    <!-- #endregion -->
    <div class="card mb-3">
        <div class="card-header h5 fw-bold">Recent Enrollments</div>
        <div class="card-body">
            <div class="row table-responsive">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Student</th>
                            <th>Course</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var enrollment in Model.RecentEnrollments)
                        {
                            <tr>
                                <td>@enrollment.Name</td>
                                <td>@enrollment.CourseName</td>
                                <td>@enrollment.EnrollmentDate.ToString("dd MMM, yyyy")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header h5 fw-bold">Pending Assignments</div>
        <div class="card-body">
            <div class="row">
                @if (Model.PendingAssignments.Count > 0)
                {
                    <ul class="list-group mb-4">
                        @foreach (var assignment in Model.PendingAssignments)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Course: @assignment.CourseName
                                <span class="badge bg-warning">Due in 7 days</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    var noData = new NoDataViewModel
                    {
                        message = "All caught up"
                    };

                    <partial name="_NoDataPartial" model="@noData" />
                }
            </div>
        </div>
    </div>
</div>

